---
layout: post
title: Clean Up Your Specs
---

{{ page.title }}
================


Often times I'll come across some rspec code that looks like this:
<script src="https://gist.github.com/1423678.js?file=bad_spec.rb"></script>


The first thing I find wrong with this is that 'it' statements should never start with 'should'.
The assertion needs to be more declarative. Instead of saying "this method might possibly do X", it needs to be more assertive; "this method absolutely does X"
This also helps us when we view our specs using the documentation format:

<div class='nv'>
method name
  only allows strings that include the letter 'a'
</div>


This reads much better than the following:

<div class='nv'>
method name
  should only allows strings that include the letter 'a'
</div>

You should be aware of how you're asserting equality also. In this test we have:
StringAllower.allowed?('some car').should == true
RSpec has some built in equality checkers better suited for this assertion.
In this instance we would want to use RSpec's built in 'eq' operator (in general, if RSpec has a built in operator, we use it)

If we wanted to see if two objects were exactly the same, we'd use something like this:
<div class='nv'>
:some_sym.equal?(:some_sym)
</div>
which will return true since :some_sym is the exact same object in both instances.

The last problem I have with this test is that it includes more than one assertion in the actual test.
There's a couple different ways to re-write it so there's only one assertion per 'it' statement.
A better way to write these tests would be the following:
<script src="https://gist.github.com/1423678.js?file=good_spec.rb"></script>
